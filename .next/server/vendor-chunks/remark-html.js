"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/remark-html";
exports.ids = ["vendor-chunks/remark-html"];
exports.modules = {

/***/ "(rsc)/./node_modules/remark-html/index.js":
/*!*******************************************!*\
  !*** ./node_modules/remark-html/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ remarkHtml)\n/* harmony export */ });\n/* harmony import */ var hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-to-html */ \"(rsc)/./node_modules/hast-util-to-html/lib/index.js\");\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-sanitize */ \"(rsc)/./node_modules/hast-util-sanitize/lib/index.js\");\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"(rsc)/./node_modules/mdast-util-to-hast/lib/index.js\");\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('hast-util-sanitize').Schema} Schema\n *\n * @typedef ExtraOptionsFields\n *   Configuration (optional).\n * @property {boolean|Schema|null} [sanitize]\n *   How to sanitize the output.\n * @property {import('mdast-util-to-hast').Handlers} [handlers={}]\n *   Object mapping mdast nodes to functions handling them.\n *\n * @typedef {import('hast-util-to-html').Options & ExtraOptionsFields} Options\n */ \n\n\n/**\n * Plugin to serialize markdown as HTML.\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | [], Root, string>}\n */ function remarkHtml(settings = {}) {\n    const options = {\n        ...settings\n    };\n    /** @type {boolean|undefined} */ let clean;\n    if (typeof options.sanitize === \"boolean\") {\n        clean = options.sanitize;\n        options.sanitize = undefined;\n    }\n    if (typeof clean !== \"boolean\") {\n        clean = true;\n    }\n    Object.assign(this, {\n        Compiler: compiler\n    });\n    /**\n   * @type {import('unified').CompilerFunction<Root, string>}\n   */ function compiler(node, file) {\n        const hast = (0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(node, {\n            allowDangerousHtml: !clean,\n            handlers: options.handlers\n        });\n        // @ts-expect-error: assume root.\n        const cleanHast = clean ? (0,hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__.sanitize)(hast, options.sanitize) : hast;\n        const result = (0,hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__.toHtml)(// @ts-expect-error: assume root.\n        cleanHast, Object.assign({}, options, {\n            allowDangerousHtml: !clean\n        }));\n        if (file.extname) {\n            file.extname = \".html\";\n        }\n        // Add an eof eol.\n        return node && node.type && node.type === \"root\" && result && /[^\\r\\n]/.test(result.charAt(result.length - 1)) ? result + \"\\n\" : result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVtYXJrLWh0bWwvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Q0FZQyxHQUV1QztBQUNHO0FBQ0Y7QUFFekM7Ozs7O0NBS0MsR0FDYyxTQUFTRyxXQUFXQyxXQUFXLENBQUMsQ0FBQztJQUM5QyxNQUFNQyxVQUFVO1FBQUMsR0FBR0QsUUFBUTtJQUFBO0lBQzVCLDhCQUE4QixHQUM5QixJQUFJRTtJQUVKLElBQUksT0FBT0QsUUFBUUosUUFBUSxLQUFLLFdBQVc7UUFDekNLLFFBQVFELFFBQVFKLFFBQVE7UUFDeEJJLFFBQVFKLFFBQVEsR0FBR007SUFDckI7SUFFQSxJQUFJLE9BQU9ELFVBQVUsV0FBVztRQUM5QkEsUUFBUTtJQUNWO0lBRUFFLE9BQU9DLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFBQ0MsVUFBVUM7SUFBUTtJQUV2Qzs7R0FFQyxHQUNELFNBQVNBLFNBQVNDLElBQUksRUFBRUMsSUFBSTtRQUMxQixNQUFNQyxPQUFPWiwwREFBTUEsQ0FBQ1UsTUFBTTtZQUN4Qkcsb0JBQW9CLENBQUNUO1lBQ3JCVSxVQUFVWCxRQUFRVyxRQUFRO1FBQzVCO1FBQ0EsaUNBQWlDO1FBQ2pDLE1BQU1DLFlBQVlYLFFBQVFMLDREQUFRQSxDQUFDYSxNQUFNVCxRQUFRSixRQUFRLElBQUlhO1FBQzdELE1BQU1JLFNBQVNsQix5REFBTUEsQ0FDbkIsaUNBQWlDO1FBQ2pDaUIsV0FDQVQsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBR0osU0FBUztZQUFDVSxvQkFBb0IsQ0FBQ1Q7UUFBSztRQUd4RCxJQUFJTyxLQUFLTSxPQUFPLEVBQUU7WUFDaEJOLEtBQUtNLE9BQU8sR0FBRztRQUNqQjtRQUVBLGtCQUFrQjtRQUNsQixPQUFPUCxRQUNMQSxLQUFLUSxJQUFJLElBQ1RSLEtBQUtRLElBQUksS0FBSyxVQUNkRixVQUNBLFVBQVVHLElBQUksQ0FBQ0gsT0FBT0ksTUFBTSxDQUFDSixPQUFPSyxNQUFNLEdBQUcsTUFDM0NMLFNBQVMsT0FDVEE7SUFDTjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLWJsb2cvLi9ub2RlX21vZHVsZXMvcmVtYXJrLWh0bWwvaW5kZXguanM/OWYwOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gUm9vdFxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdC11dGlsLXNhbml0aXplJykuU2NoZW1hfSBTY2hlbWFcbiAqXG4gKiBAdHlwZWRlZiBFeHRyYU9wdGlvbnNGaWVsZHNcbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFufFNjaGVtYXxudWxsfSBbc2FuaXRpemVdXG4gKiAgIEhvdyB0byBzYW5pdGl6ZSB0aGUgb3V0cHV0LlxuICogQHByb3BlcnR5IHtpbXBvcnQoJ21kYXN0LXV0aWwtdG8taGFzdCcpLkhhbmRsZXJzfSBbaGFuZGxlcnM9e31dXG4gKiAgIE9iamVjdCBtYXBwaW5nIG1kYXN0IG5vZGVzIHRvIGZ1bmN0aW9ucyBoYW5kbGluZyB0aGVtLlxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QtdXRpbC10by1odG1sJykuT3B0aW9ucyAmIEV4dHJhT3B0aW9uc0ZpZWxkc30gT3B0aW9uc1xuICovXG5cbmltcG9ydCB7dG9IdG1sfSBmcm9tICdoYXN0LXV0aWwtdG8taHRtbCdcbmltcG9ydCB7c2FuaXRpemV9IGZyb20gJ2hhc3QtdXRpbC1zYW5pdGl6ZSdcbmltcG9ydCB7dG9IYXN0fSBmcm9tICdtZGFzdC11dGlsLXRvLWhhc3QnXG5cbi8qKlxuICogUGx1Z2luIHRvIHNlcmlhbGl6ZSBtYXJrZG93biBhcyBIVE1MLlxuICpcbiAqIEB0aGlzIHtpbXBvcnQoJ3VuaWZpZWQnKS5Qcm9jZXNzb3J9XG4gKiBAdHlwZSB7aW1wb3J0KCd1bmlmaWVkJykuUGx1Z2luPFtPcHRpb25zP10gfCBbXSwgUm9vdCwgc3RyaW5nPn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVtYXJrSHRtbChzZXR0aW5ncyA9IHt9KSB7XG4gIGNvbnN0IG9wdGlvbnMgPSB7Li4uc2V0dGluZ3N9XG4gIC8qKiBAdHlwZSB7Ym9vbGVhbnx1bmRlZmluZWR9ICovXG4gIGxldCBjbGVhblxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5zYW5pdGl6ZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgY2xlYW4gPSBvcHRpb25zLnNhbml0aXplXG4gICAgb3B0aW9ucy5zYW5pdGl6ZSA9IHVuZGVmaW5lZFxuICB9XG5cbiAgaWYgKHR5cGVvZiBjbGVhbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgY2xlYW4gPSB0cnVlXG4gIH1cblxuICBPYmplY3QuYXNzaWduKHRoaXMsIHtDb21waWxlcjogY29tcGlsZXJ9KVxuXG4gIC8qKlxuICAgKiBAdHlwZSB7aW1wb3J0KCd1bmlmaWVkJykuQ29tcGlsZXJGdW5jdGlvbjxSb290LCBzdHJpbmc+fVxuICAgKi9cbiAgZnVuY3Rpb24gY29tcGlsZXIobm9kZSwgZmlsZSkge1xuICAgIGNvbnN0IGhhc3QgPSB0b0hhc3Qobm9kZSwge1xuICAgICAgYWxsb3dEYW5nZXJvdXNIdG1sOiAhY2xlYW4sXG4gICAgICBoYW5kbGVyczogb3B0aW9ucy5oYW5kbGVyc1xuICAgIH0pXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogYXNzdW1lIHJvb3QuXG4gICAgY29uc3QgY2xlYW5IYXN0ID0gY2xlYW4gPyBzYW5pdGl6ZShoYXN0LCBvcHRpb25zLnNhbml0aXplKSA6IGhhc3RcbiAgICBjb25zdCByZXN1bHQgPSB0b0h0bWwoXG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yOiBhc3N1bWUgcm9vdC5cbiAgICAgIGNsZWFuSGFzdCxcbiAgICAgIE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMsIHthbGxvd0Rhbmdlcm91c0h0bWw6ICFjbGVhbn0pXG4gICAgKVxuXG4gICAgaWYgKGZpbGUuZXh0bmFtZSkge1xuICAgICAgZmlsZS5leHRuYW1lID0gJy5odG1sJ1xuICAgIH1cblxuICAgIC8vIEFkZCBhbiBlb2YgZW9sLlxuICAgIHJldHVybiBub2RlICYmXG4gICAgICBub2RlLnR5cGUgJiZcbiAgICAgIG5vZGUudHlwZSA9PT0gJ3Jvb3QnICYmXG4gICAgICByZXN1bHQgJiZcbiAgICAgIC9bXlxcclxcbl0vLnRlc3QocmVzdWx0LmNoYXJBdChyZXN1bHQubGVuZ3RoIC0gMSkpXG4gICAgICA/IHJlc3VsdCArICdcXG4nXG4gICAgICA6IHJlc3VsdFxuICB9XG59XG4iXSwibmFtZXMiOlsidG9IdG1sIiwic2FuaXRpemUiLCJ0b0hhc3QiLCJyZW1hcmtIdG1sIiwic2V0dGluZ3MiLCJvcHRpb25zIiwiY2xlYW4iLCJ1bmRlZmluZWQiLCJPYmplY3QiLCJhc3NpZ24iLCJDb21waWxlciIsImNvbXBpbGVyIiwibm9kZSIsImZpbGUiLCJoYXN0IiwiYWxsb3dEYW5nZXJvdXNIdG1sIiwiaGFuZGxlcnMiLCJjbGVhbkhhc3QiLCJyZXN1bHQiLCJleHRuYW1lIiwidHlwZSIsInRlc3QiLCJjaGFyQXQiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/remark-html/index.js\n");

/***/ })

};
;