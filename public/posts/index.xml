<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 小白开发助手</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on 小白开发助手</description>
    <generator>Hugo -- 0.146.7</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 11 May 2025 01:26:04 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解决Hugo子模块路径配置错误，导致的预览URL出错</title>
      <link>http://localhost:1313/posts/fix-hugo-submodule-preview-url/</link>
      <pubDate>Sun, 11 May 2025 01:26:04 +0800</pubDate>
      <guid>http://localhost:1313/posts/fix-hugo-submodule-preview-url/</guid>
      <description>&lt;p&gt;部署这个网站的时候遇到了一个问题，本地测试的时候文章都是正常的，但是部署到 vercel 之后，页面的URL出错。
全部都是 &lt;code&gt;localhost:1313&lt;/code&gt; 开头的URL，而不是预期的 &lt;code&gt;www.thecodecraft.site&lt;/code&gt; 开头的URL。
在 vercel 的 build logs 中发现了警告报错，逐行研读，最终解决了问题：&lt;/p&gt;
&lt;h2 id=&#34;问题现象&#34;&gt;问题现象&lt;/h2&gt;
&lt;p&gt;在 Vercel运行项目时，主题资源文件加载路径异常，控制台出现404错误。这会导致 vercel 的项目主页不显示预览效果。
同时，通过域名访问时，所有的链接都会失效，被解析为解析为&lt;code&gt;localhost:1313/...&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;排查过程&#34;&gt;排查过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;检查主题子模块配置&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-git&#34; data-lang=&#34;git&#34;&gt;[submodule &amp;#34;themes/PaperMod&amp;#34;]
	path = themes/PaperMod
	url = https://github.com/adityatelange/hugo-PaperMod.git
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;发现主题资源路径被解析为&lt;code&gt;http://localhost:1313/themes/PaperMod/...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确认Hugo默认将主题目录视为普通内容目录&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;根本原因&#34;&gt;根本原因&lt;/h2&gt;
&lt;p&gt;Hugo默认配置将&lt;code&gt;themes&lt;/code&gt;目录作为内容资源路径处理，导致：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主题子模块路径被错误解析&lt;/li&gt;
&lt;li&gt;静态资源路径生成错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;修改&lt;code&gt;.gitmodules&lt;/code&gt;配置指定特殊目录标记：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-git&#34; data-lang=&#34;git&#34;&gt;[submodule &amp;#34;hugo_modules/PaperMod&amp;#34;]
	path = hugo_modules/PaperMod
	url = https://github.com/adityatelange/hugo-PaperMod.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;关键修改点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将&lt;code&gt;themes&lt;/code&gt;目录重命名为&lt;code&gt;hugo_modules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过Hugo的模块系统自动识别专用目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实施效果&#34;&gt;实施效果&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;资源路径正确解析为&lt;code&gt;http://localhost:1313/PaperMod/...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;主题样式和脚本加载正常&lt;/li&gt;
&lt;li&gt;预览功能完全恢复&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术总结&#34;&gt;技术总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Hugo对特殊目录名称有特定处理逻辑&lt;/li&gt;
&lt;li&gt;子模块配置需与Hugo模块系统配合使用&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;hugo mod&lt;/code&gt;命令管理依赖更可靠&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo mod get github.com/adityatelange/hugo-PaperMod
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Vercel免费替代方案：如何不花钱练习多个网站模板</title>
      <link>http://localhost:1313/posts/vercel-free-alternatives-for-practice/</link>
      <pubDate>Sun, 11 May 2025 01:02:04 +0800</pubDate>
      <guid>http://localhost:1313/posts/vercel-free-alternatives-for-practice/</guid>
      <description>&lt;h2 id=&#34;问题背景&#34;&gt;问题背景&lt;/h2&gt;
&lt;p&gt;在Vercel上尝试部署网站时，很多人会遇到这样的问题：免费资源有限，特别是数据库等服务往往只能免费使用一次，之后就需要付费。对于想要练习多个网站模板的开发者来说，这是一个不小的障碍。本文将分享一些替代方案，帮助你在不花钱的情况下练习更多的网站模板。&lt;/p&gt;
&lt;h2 id=&#34;免费托管平台比较&#34;&gt;免费托管平台比较&lt;/h2&gt;
&lt;p&gt;除了Vercel，还有其他一些提供免费层级的托管平台：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Netlify&lt;/strong&gt; - 提供类似Vercel的免费托管服务，每月有100GB的带宽限制和300分钟的构建时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub Pages&lt;/strong&gt; - 完全免费，适合静态网站&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudflare Pages&lt;/strong&gt; - 提供慷慨的免费层级，无带宽限制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Render&lt;/strong&gt; - 有免费层级，但有使用限制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Railway&lt;/strong&gt; - 提供$5的免费额度，足够运行小型项目&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;本地开发环境&#34;&gt;本地开发环境&lt;/h2&gt;
&lt;p&gt;最经济实惠的方式是在本地搭建开发环境：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; - 使用容器技术在本地模拟生产环境，可以同时运行多个项目而不互相干扰&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XAMPP/MAMP&lt;/strong&gt; - 为PHP/MySQL项目提供简单的本地开发栈&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node.js本地服务器&lt;/strong&gt; - 使用Express或其他框架在本地运行Node.js应用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LocalWP&lt;/strong&gt; - 专为WordPress开发者设计的本地环境&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用模拟数据进行前端开发&#34;&gt;使用模拟数据进行前端开发&lt;/h2&gt;
&lt;p&gt;对于前端开发，你可以：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;JSON Server&lt;/strong&gt; - 创建一个完整的假REST API，无需实际数据库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mock Service Worker&lt;/strong&gt; - 在浏览器中拦截网络请求并模拟响应&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;静态JSON文件&lt;/strong&gt; - 简单项目可以直接使用静态JSON文件模拟API响应&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LocalStorage/IndexedDB&lt;/strong&gt; - 利用浏览器存储功能模拟后端存储&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;不需要付费数据库的项目推荐&#34;&gt;不需要付费数据库的项目推荐&lt;/h2&gt;
&lt;p&gt;以下是一些可以练习的项目类型，它们不需要复杂的后端数据库：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;静态博客&lt;/strong&gt; - 使用Hugo、Jekyll或Gatsby构建&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单页应用(SPA)&lt;/strong&gt; - 使用React、Vue或Angular构建，数据存储在LocalStorage&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作品集网站&lt;/strong&gt; - 展示你的项目和技能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;登陆页面&lt;/strong&gt; - 练习UI/UX设计和转化率优化&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算器、待办事项应用&lt;/strong&gt; - 简单但实用的JavaScript应用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;免费数据库选项&#34;&gt;免费数据库选项&lt;/h2&gt;
&lt;p&gt;如果确实需要数据库，这些选项提供免费层级：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Namecheap域名托管Cloudflare保姆级教程</title>
      <link>http://localhost:1313/posts/namecheap-cloudflare-dns-guide/</link>
      <pubDate>Tue, 06 May 2025 22:03:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/namecheap-cloudflare-dns-guide/</guid>
      <description>&lt;p&gt;习惯使用 Cloudflare，买了新域名之后，要怎么托管到 Cloudflare 上呢？
今天用 NameCheap 为例，介绍一下托管到 Cloudflare 上的流程。
手把手教你两把Namecheap域名托管到Cloudflare！&lt;/p&gt;
&lt;h2 id=&#34;方案选择5秒决策版&#34;&gt;方案选择（5秒决策版）&lt;/h2&gt;
&lt;p&gt;🔹 &lt;strong&gt;只想用Cloudflare的CDN加速&lt;/strong&gt; ➔ 选DNS托管&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;dns托管保留namecheap注册&#34;&gt;DNS托管（保留Namecheap注册）&lt;/h3&gt;
&lt;p&gt;这个方案适合「用Cloudflare加速但不想转移域名」的小伙伴，就像一次简单的搬家。&lt;/p&gt;
&lt;h4 id=&#34;第一步认领cloudflare家门牌&#34;&gt;第一步：认领Cloudflare家门牌&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;登录Cloudflare控制台 ➔ 点击「添加站点」&lt;/li&gt;
&lt;li&gt;输入裸域名（例：&lt;code&gt;yourdomain.com&lt;/code&gt; 别带www）&lt;/li&gt;
&lt;li&gt;选择免费套餐 → 等系统扫描现有DNS记录（不想要的直接删）&lt;/li&gt;
&lt;li&gt;记下分配的两个Nameservers地址（例：&lt;code&gt;kipp.ns.cloudflare.com&lt;/code&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;第二步namecheap换门锁&#34;&gt;第二步：Namecheap换门锁&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Namecheap后台找到域名 → 点击「Manage」&lt;/li&gt;
&lt;li&gt;在下方的「Nameservers」域名服务器里选择「Custom DNS」&lt;/li&gt;
&lt;li&gt;粘贴第一步提到的 Cloudflare 给的俩地址 → 保存&lt;/li&gt;
&lt;li&gt;去泡杯咖啡等生效（通常10分钟，最长24小时）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;第三步布置cloudflare新家&#34;&gt;第三步：布置Cloudflare新家&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 常用DNS记录配置示例&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;A记录 → @ 指向 104.21.67.166（主域名）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CNAME记录 → www 指向 yourdomain.com（自动跳转）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;⚠️ 重要设置：
回到 Cloudflare 里找到 SSL/TLS 选择配置「完全」模式，强制HTTPS更安全&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;一般来说，现在的 Cloudflare 都能自动检测到 Namecheap 的域名，无需手动配置。&lt;/p&gt;
&lt;h2 id=&#34;血泪经验总结&#34;&gt;血泪经验总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;改DNS后有的地区要等24小时生效，期间网站抽风属正常&lt;/li&gt;
&lt;li&gt;SSL证书错误多半是因为没开「完全」模式&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;小贴士：这种方案只是用 CF 的 CDN 加速和简单的统计，方便管理，域名的续费和归属还是在 Namecheap 里。不会有更多麻烦的操作。顺利的话，15分钟搞定！&lt;/p&gt;</description>
    </item>
    <item>
      <title>网站运行原理科普：1 分钟理解域名、服务器与DNS</title>
      <link>http://localhost:1313/posts/web-basics-for-beginners/</link>
      <pubDate>Mon, 05 May 2025 18:01:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/web-basics-for-beginners/</guid>
      <description>&lt;p&gt;很多建站新手会在这里浪费很多时间，就为了理解域名、服务器与DNS是什么。
今天简单介绍一下，快速入门，节约时间。&lt;/p&gt;
&lt;h2 id=&#34;快递系统里的网站原理&#34;&gt;快递系统里的网站原理&lt;/h2&gt;
&lt;p&gt;想象你要给朋友寄快递，这个过程恰好能帮助我们理解网站运行的基本要素：&lt;/p&gt;
&lt;h3 id=&#34;1-域名--快递地址&#34;&gt;1. 域名 = 快递地址&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;就像「XX小区3号楼502室」是现实中的地址&lt;/li&gt;
&lt;li&gt;「www.example.com」就是网站世界的地址&lt;/li&gt;
&lt;li&gt;通过这个地址，快递员（浏览器）才能找到正确位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-服务器--快递仓库&#34;&gt;2. 服务器 = 快递仓库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;仓库里存放着各种包裹（网站文件）&lt;/li&gt;
&lt;li&gt;这个特殊仓库需要：
&lt;ul&gt;
&lt;li&gt;全年无休（24小时运行）&lt;/li&gt;
&lt;li&gt;超大货架（存储空间）&lt;/li&gt;
&lt;li&gt;快速分拣系统（处理器）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-网站代码--包裹内容&#34;&gt;3. 网站代码 = 包裹内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HTML：包裹里的物品清单&lt;/li&gt;
&lt;li&gt;CSS：物品的包装样式&lt;/li&gt;
&lt;li&gt;JavaScript：包裹里的智能说明书&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-dns--邮局分拣系统&#34;&gt;4. DNS = 邮局分拣系统&lt;/h3&gt;
&lt;p&gt;当你在浏览器输入地址时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览器咨询DNS（邮局查询台）&lt;/li&gt;
&lt;li&gt;DNS查找域名对应的IP（查询地址编码）&lt;/li&gt;
&lt;li&gt;返回真实仓库坐标（服务器IP地址）&lt;/li&gt;
&lt;li&gt;浏览器开始派送请求&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;网站运行流程图&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/images/%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg&#34; title=&#34;网站运行流程图&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实际工作流程&#34;&gt;实际工作流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;你在浏览器输入网址&lt;/li&gt;
&lt;li&gt;DNS解析获得IP（如：203.0.113.1）&lt;/li&gt;
&lt;li&gt;浏览器向该IP的服务器发送请求&lt;/li&gt;
&lt;li&gt;服务器打包好HTML/CSS/JS文件&lt;/li&gt;
&lt;li&gt;通过互联网「快递」回你的电脑&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;新手常见疑问&#34;&gt;新手常见疑问&lt;/h2&gt;
&lt;p&gt;❓ 为什么有时候网站打不开？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地址写错（域名错误）&lt;/li&gt;
&lt;li&gt;仓库关门（服务器宕机）&lt;/li&gt;
&lt;li&gt;分拣系统故障（DNS问题）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;❓ 手机和电脑看到网页为什么不同？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仓库准备了不同尺寸的包裹（响应式设计）&lt;/li&gt;
&lt;li&gt;快递员根据设备自动选择合适包裹&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>解决 Hugo 预览时出现 Page Not Found 的问题</title>
      <link>http://localhost:1313/posts/fix-hugo-preview-page-not-found/</link>
      <pubDate>Sun, 27 Apr 2025 10:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/fix-hugo-preview-page-not-found/</guid>
      <description>&lt;p&gt;搭建这个网站的时候，就遇到了这个问题，记录一下。
“Page Not Found” 是 Hugo 网站预览时常见的错误提示。&lt;/p&gt;
&lt;h2 id=&#34;问题现象&#34;&gt;问题现象&lt;/h2&gt;
&lt;p&gt;在使用 &lt;code&gt;hugo server&lt;/code&gt; 命令预览 Hugo 网站时，浏览器访问 &lt;code&gt;http://localhost:1313/&lt;/code&gt; （演示用的端口号，不必一致），
可能会显示 &amp;ldquo;Page Not Found&amp;rdquo; 的错误页面，而不是预期的网站内容。&lt;/p&gt;
&lt;h2 id=&#34;可能的原因与解决方法&#34;&gt;可能的原因与解决方法&lt;/h2&gt;
&lt;p&gt;在网上搜索一圈，基本可以确定，这个问题与 Hugo 的主题配置有关。&lt;/p&gt;
&lt;h3 id=&#34;配置文件名错误&#34;&gt;配置文件名错误&lt;/h3&gt;
&lt;p&gt;许多旧的教程或文档可能会引导我们将主题配置放在 &lt;code&gt;config.toml&lt;/code&gt; 文件中。
但，这已经过时了。
根据 Hugo 的较新版本和官方文档，&lt;strong&gt;主题相关的配置应该放在根目录下的 &lt;code&gt;hugo.toml&lt;/code&gt; 文件里&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们需要检查项目根目录下是否存在 &lt;code&gt;hugo.toml&lt;/code&gt; 文件，并确保您的主题设置（例如 &lt;code&gt;theme = &amp;quot;your-theme-name&amp;quot;&lt;/code&gt;）是在这个文件中配置的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误示例 (&lt;code&gt;config.toml&lt;/code&gt;)：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这是旧的或不推荐的方式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;baseURL&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:1313/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;我的网站&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;languageCode&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zh-CN&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ananke&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;正确示例 (&lt;code&gt;hugo.toml&lt;/code&gt;)：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;baseURL&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:1313/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;我的网站&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;languageCode&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zh-CN&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ananke&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hasCJKLanguage&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;pagination&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pagerSize&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您之前使用了 &lt;code&gt;config.toml&lt;/code&gt;，请尝试将配置迁移到 &lt;code&gt;hugo.toml&lt;/code&gt;（如果 &lt;code&gt;hugo.toml&lt;/code&gt; 不存在，则创建它），然后删除或重命名旧的 &lt;code&gt;config.toml&lt;/code&gt; 文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么一定要做自己的网站，哪怕再小</title>
      <link>http://localhost:1313/posts/why-you-need-a-personal-website/</link>
      <pubDate>Sun, 19 May 2024 14:58:41 +0800</pubDate>
      <guid>http://localhost:1313/posts/why-you-need-a-personal-website/</guid>
      <description>&lt;h1 id=&#34;为什么一定要做自己的网站哪怕再小&#34;&gt;为什么一定要做自己的网站，哪怕再小&lt;/h1&gt;
&lt;p&gt;在今天这个互联网时代，我总觉得有个自己的小网站，就像随身揣着一片小天地，它能装下你的想法、作品，甚至是你对未来的野心。别小瞧了这事儿，哪怕它一开始只是个简单的页面，也可能是你人生里的一大步。&lt;/p&gt;
&lt;h2 id=&#34;一小网站大用处&#34;&gt;一、小网站，大用处&lt;/h2&gt;
&lt;p&gt;说真的，我以前总觉得，做网站这事儿离自己八竿子打不着。这不是程序员、大公司才玩得转的吗？后来才明白，这完全是个心理误区。我的一个朋友，他就是个普通的摄影师，自己弄了个网站，把平时拍的照片往上面一放。一开始简简单单，连个设计都没有。可没想到，就是这么个不起眼的小网站，居然给他带来了不少私活。客户就是通过这个网站联系到他，说喜欢他的风格，想约拍。&lt;/p&gt;
&lt;p&gt;你看，这不就是个实实在在的例子吗？网站这玩意儿，不管你刚开始做得多粗糙，它都能成为你个人展示的舞台。在这个数字化的世界里，它就是你的 &amp;ldquo;门面&amp;rdquo;，让人一眼就能找到你，了解你。&lt;/p&gt;
&lt;h2 id=&#34;二为啥说网站是你的-数字基本盘&#34;&gt;二、为啥说网站是你的 &amp;ldquo;数字基本盘&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;想想看，我们每天刷社交媒体，发朋友圈，晒自拍。这些平台确实挺方便，可它们到底是谁的？是那些科技巨头的。你发的东西，随时可能被算法埋没，或者因为平台规则改了，就再也找不着了。我以前就遇到过这种情况，辛辛苦苦写了个长文，发在某个社交平台上，结果没过几个月，就因为平台调整，阅读量直接清零。那叫一个心疼！&lt;/p&gt;
&lt;p&gt;但你要是有自己的网站就不一样了。它完全属于你。你想怎么改就怎么改，想发啥就发啥。它是你在数字世界里的根，不会因为你没缴电费就突然消失。就像我认识的那个小众音乐人，他自己搭建了个小网站。一开始就是个简单的音频播放器，配上歌词和一些创作感悟。后来慢慢积累，成了他和粉丝交流的专属空间。有粉丝说，就喜欢他网站上那种 &amp;ldquo;原汁原味&amp;rdquo; 的感觉，不像其他平台那么商业化。&lt;/p&gt;
&lt;h2 id=&#34;三别再依赖公共平台了抓住自己的小天地&#34;&gt;三、别再依赖公共平台了，抓住自己的小天地&lt;/h2&gt;
&lt;p&gt;说实话，我自己以前也觉得这事儿有点玄乎。不就发个照片、写个文字吗？微信、微博不都行嘛。但后来我仔细琢磨，这真的不一样。公共平台就像别人的房子，你住着可以，但你要想改造一下，可能得看房东脸色。而且，说白了，你在那儿发的东西，最终的收益还是平台的。你发得再火，广告收益也落不着你多少。&lt;/p&gt;
&lt;p&gt;但你要是有自己的网站，那就不一样了。你发的每一篇文章、每一张照片，都是你的资产。你可以通过网站卖自己的作品，比如摄影集、电子书；也可以放广告，赚点外快；甚至可以把网站做成一个品牌，吸引合作机会。而且，你完全不用担心哪天平台把你封了，或者把你的内容删了，因为这是你的地盘。&lt;/p&gt;
&lt;h2 id=&#34;四别小瞧了自己迈出第一步才是关键&#34;&gt;四、别小瞧了自己，迈出第一步才是关键&lt;/h2&gt;
&lt;p&gt;我知道，很多人可能会觉得，我自己做网站？这得多难啊！我以前也是这么想的，后来才发现，这事儿没想象中那么复杂。现在市面上有那么多建站工具，比如 WordPress、Wix、Squarespace，它们都有现成的模板，你照着葫芦画瓢就行。而且，很多工具还提供免费试用，你可以先试试水，觉得合适了再继续。&lt;/p&gt;
&lt;p&gt;刚开始的时候，别想着一步到位。就像我之前说的那个摄影师朋友，他最开始的网站就是个简单的图片展示页。但就是这么一个小小的起步，他坚持更新，慢慢优化，现在他的网站成了他接活儿的 &amp;ldquo;金字招牌&amp;rdquo;。你看，只要迈出了第一步，后面的事儿都可以一步步来。&lt;/p&gt;
&lt;h2 id=&#34;五别等了现在就开始吧&#34;&gt;五、别等了，现在就开始吧&lt;/h2&gt;
&lt;p&gt;说真的，我写这篇文章就是想跟大家说，别再犹豫了。在这个互联网时代，拥有自己的网站就像给自己准备了一把钥匙，能打开很多扇以前你根本想不到的门。它不需要你一开始就做得多么完美，哪怕只是个小小的开始，它都能成为你成长的基石。&lt;/p&gt;
&lt;p&gt;别再把时间浪费在那些不稳定的公共平台上，开始搭建自己的小天地吧。刚开始可能会有点难，但当你看到自己的网站一点点成长起来，那种成就感是无可比拟的。相信我，这会是你人生中一个超棒的决定！&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
